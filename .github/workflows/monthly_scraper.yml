name: Monthly Data Scraping and DB Release

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 3 1 * *'

jobs:
  scrape_process_release: # Unico job per semplicità
    runs-on: ubuntu-latest
    permissions:
      contents: write # Per creare release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # O la tua versione preferita

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Scraper
      run: python scraper_scripts/scraper.py # Assumendo che sia eseguibile così
      # Se scraper.py è nella root, allora `python scraper.py`

    - name: Run ETL Processor
      run: python scraper_scripts/etl_processor.py # Assumendo che sia eseguibile così
      # Aggiungi i percorsi corretti se i file non sono in scraper_scripts/


    - name: Run ETL Verifier
      run: python scraper_scripts/verify_etl.py

    - name: Run DB Handler (Load to SQLite)
      run: python scraper_scripts/db_handler.py # Assumendo che sia eseguibile così
      # Questo dovrebbe creare il file pagamenti.db nella root del checkout

    - name: Get current date for release tag
      id: date
      run: echo "TAG_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Create Release and Upload DB
      uses: softprops/action-gh-release@v2
      with:
        tag_name: db-v${{ steps.date.outputs.TAG_DATE }} # Tag più specifico per DB
        name: Database Update ${{ steps.date.outputs.TAG_DATE }}
        body: |
          Database SQLite (pagamenti.db) aggiornato con i dati al ${{ steps.date.outputs.TAG_DATE }}.
          Questo DB è il risultato dell'esecuzione di scraper, etl_processor e db_handler.
        files: |
          data/database/busto_pagamenti.db   # Assicurati che db_handler.py crei questo file nella root
                         # o adatta il percorso qui se viene creato altrove (es. data/pagamenti.db)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}